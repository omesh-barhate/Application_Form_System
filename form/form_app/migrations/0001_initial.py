# Generated by Django 4.1.7 on 2023-06-01 09:19

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('inhouse', models.BooleanField(default=False)),
                ('middle_name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('mobile_number', models.CharField(max_length=10, unique=True)),
                ('dob', models.DateField()),
                ('mother_first_name', models.CharField(max_length=255)),
                ('father_first_name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('aadhar_card', models.BinaryField()),
                ('candidate_sign', models.BinaryField()),
                ('parent_sign', models.BinaryField()),
                ('candidate_photo', models.BinaryField()),
                ('ssc_marksheet', models.BinaryField()),
                ('hsc_marksheet', models.BinaryField()),
                ('payment_receipt', models.BinaryField()),
                ('leaving_certificate', models.BinaryField()),
                ('mumbai_university_application', models.BinaryField()),
                ('fy_sem1', models.BinaryField()),
                ('fy_sem2', models.BinaryField()),
                ('sy_sem1', models.BinaryField()),
                ('sy_sem2', models.BinaryField()),
                ('migration_certificate', models.BinaryField()),
                ('gap_certificate', models.BinaryField()),
            ],
        ),
        migrations.CreateModel(
            name='fy_sem1_marksheet',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('university_name', models.CharField(max_length=255)),
                ('school_name', models.CharField(max_length=255)),
                ('medium', models.CharField(max_length=10)),
                ('seat_number', models.IntegerField()),
                ('marksheet_number', models.IntegerField()),
                ('passing_year', models.IntegerField()),
                ('passing_attempts', models.IntegerField()),
                ('marks_obtained', models.IntegerField()),
                ('marks_out_of', models.IntegerField()),
                ('cgpa', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='fy_sem2_marksheet',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('university_name', models.CharField(max_length=255)),
                ('school_name', models.CharField(max_length=255)),
                ('medium', models.CharField(max_length=10)),
                ('seat_number', models.IntegerField()),
                ('marksheet_number', models.IntegerField()),
                ('passing_year', models.IntegerField()),
                ('passing_attempts', models.IntegerField()),
                ('marks_obtained', models.IntegerField()),
                ('marks_out_of', models.IntegerField()),
                ('cgpa', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='hsc_marksheet',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('university_name', models.CharField(max_length=255)),
                ('school_name', models.CharField(max_length=255)),
                ('medium', models.CharField(max_length=10)),
                ('seat_number', models.IntegerField()),
                ('marksheet_number', models.IntegerField()),
                ('passing_year', models.IntegerField()),
                ('passing_attempts', models.IntegerField()),
                ('marks_obtained', models.IntegerField()),
                ('marks_out_of', models.IntegerField()),
                ('cgpa', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='ssc_marksheet',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('university_name', models.CharField(max_length=255)),
                ('school_name', models.CharField(max_length=255)),
                ('medium', models.CharField(max_length=10)),
                ('seat_number', models.IntegerField()),
                ('marksheet_number', models.IntegerField()),
                ('passing_year', models.IntegerField()),
                ('passing_attempts', models.IntegerField()),
                ('marks_obtained', models.IntegerField()),
                ('marks_out_of', models.IntegerField()),
                ('cgpa', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='form_app.course')),
            ],
        ),
        migrations.CreateModel(
            name='sy_sem1_marksheet',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('university_name', models.CharField(max_length=255)),
                ('school_name', models.CharField(max_length=255)),
                ('medium', models.CharField(max_length=10)),
                ('seat_number', models.IntegerField()),
                ('marksheet_number', models.IntegerField()),
                ('passing_year', models.IntegerField()),
                ('passing_attempts', models.IntegerField()),
                ('marks_obtained', models.IntegerField()),
                ('marks_out_of', models.IntegerField()),
                ('cgpa', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='sy_sem2_marksheet',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('university_name', models.CharField(max_length=255)),
                ('school_name', models.CharField(max_length=255)),
                ('medium', models.CharField(max_length=10)),
                ('seat_number', models.IntegerField()),
                ('marksheet_number', models.IntegerField()),
                ('passing_year', models.IntegerField()),
                ('passing_attempts', models.IntegerField()),
                ('marks_obtained', models.IntegerField()),
                ('marks_out_of', models.IntegerField()),
                ('cgpa', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Subjects_selected',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='form_app.course')),
                ('subjects', models.ManyToManyField(to='form_app.subject')),
            ],
        ),
        migrations.CreateModel(
            name='Personal_details',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=255)),
                ('middle_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('name_on_marksheet', models.CharField(max_length=255)),
                ('name_in_hindi', models.CharField(db_collation='utf8_general_ci', max_length=100)),
                ('mobile_number', models.CharField(max_length=10, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('reservation', models.CharField(choices=[('DT/VJ', 'DT/VJ'), ('NT', 'NT'), ('OBC', 'OBC'), ('OPEN', 'OPEN'), ('SBC', 'SBC'), ('SC', 'SC'), ('ST', 'ST')], max_length=10)),
                ('dob', models.DateField()),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('admission_type', models.CharField(choices=[('Regular', 'Regular'), ('Provisional', 'Provisional'), ('Transfer', 'Transfer')], max_length=11)),
                ('blood_group', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=3)),
                ('aadhar_number', models.CharField(max_length=12, unique=True)),
                ('address', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('account_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
